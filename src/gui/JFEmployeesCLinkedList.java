/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import core.ComissionAndBaseEmployee;
import core.ComissionEmployee;
import core.Date;
import core.EmployeesCLinkedList;
import core.SalariedEmployee;
import core.TimedEmployee;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.function.Consumer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author LuisM45
 */
public class JFEmployeesCLinkedList extends javax.swing.JFrame {

    /**
     * Creates new form JFEmployees
     */
    public JFEmployeesCLinkedList() {
        employeesCLinkedList = new EmployeesCLinkedList();
        focusedJFs = new ArrayList<>();
        initComponents();
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTPEmployees = new javax.swing.JTabbedPane();
        jPByHour = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTFNameA0 = new javax.swing.JTextField();
        jTFBirthA0 = new javax.swing.JTextField();
        jTFEntryA0 = new javax.swing.JTextField();
        jTFComp2A0 = new javax.swing.JTextField();
        jTFComp1A0 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPAsalariado = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTFNameA1 = new javax.swing.JTextField();
        jTFBirthA1 = new javax.swing.JTextField();
        jTFEntryA1 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTFComp2A1 = new javax.swing.JTextField();
        jPCommie = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTFNameA2 = new javax.swing.JTextField();
        jTFBirthA2 = new javax.swing.JTextField();
        jTFEntryA2 = new javax.swing.JTextField();
        jTFComp1A2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTFComp2A2 = new javax.swing.JTextField();
        jPBAC = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTFNameA3 = new javax.swing.JTextField();
        jTFBirthA3 = new javax.swing.JTextField();
        jTFEntryA3 = new javax.swing.JTextField();
        jTFComp2A3 = new javax.swing.JTextField();
        jTFComp1A3 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTFComp3A3 = new javax.swing.JTextField();
        jBExit = new javax.swing.JButton();
        jBNew = new javax.swing.JButton();
        jBAddStart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAArea = new javax.swing.JTextArea();
        jBLeastPayed = new javax.swing.JButton();
        jBMostPayed = new javax.swing.JButton();
        jBAddEnd = new javax.swing.JButton();
        jBAddOrder = new javax.swing.JButton();
        jBDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Empleados por LinkedListDeCollection");

        jTPEmployees.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTPEmployeesStateChanged(evt);
            }
        });

        jLabel4.setText("Nombres");

        jLabel5.setText("Fecha de Nacimiento");

        jLabel6.setText("Fecha de ingreso");

        jTFBirthA0.setToolTipText("Formato: dd/mm/yyyy");

        jTFEntryA0.setToolTipText("Formato: dd/mm/yyyy");

        jLabel18.setText("Horas trabajadas");

        jLabel19.setText("Salario por Hora");

        javax.swing.GroupLayout jPByHourLayout = new javax.swing.GroupLayout(jPByHour);
        jPByHour.setLayout(jPByHourLayout);
        jPByHourLayout.setHorizontalGroup(
            jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPByHourLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPByHourLayout.createSequentialGroup()
                        .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(jPByHourLayout.createSequentialGroup()
                        .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTFComp2A0, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jTFComp1A0)
                    .addComponent(jTFNameA0, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFBirthA0, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFEntryA0, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPByHourLayout.setVerticalGroup(
            jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPByHourLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFNameA0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFBirthA0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEntryA0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFComp1A0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPByHourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTFComp2A0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTPEmployees.addTab("Empleado por horas", jPByHour);

        jLabel1.setText("Nombres");

        jLabel2.setText("Fecha de Nacimiento");

        jLabel3.setText("Fecha de ingreso");

        jTFBirthA1.setToolTipText("Formato: dd/mm/yyyy");

        jTFEntryA1.setToolTipText("Formato: dd/mm/yyyy");

        jLabel20.setText("Salario BÃ¡sico");

        javax.swing.GroupLayout jPAsalariadoLayout = new javax.swing.GroupLayout(jPAsalariado);
        jPAsalariado.setLayout(jPAsalariadoLayout);
        jPAsalariadoLayout.setHorizontalGroup(
            jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAsalariadoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTFComp2A1)
                    .addComponent(jTFNameA1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFEntryA1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFBirthA1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPAsalariadoLayout.setVerticalGroup(
            jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPAsalariadoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFNameA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFBirthA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEntryA1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPAsalariadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTFComp2A1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        jTPEmployees.addTab("Empleado asalariado", jPAsalariado);

        jLabel10.setText("Nombres");

        jLabel11.setText("Fecha de Nacimiento");

        jLabel12.setText("Fecha de ingreso");

        jTFBirthA2.setToolTipText("Formato: dd/mm/yyyy");

        jTFEntryA2.setToolTipText("Formato: dd/mm/yyyy");

        jLabel13.setText("Porcentaje de ComisiÃ³n");

        jLabel14.setText("Ventas Brutas");

        javax.swing.GroupLayout jPCommieLayout = new javax.swing.GroupLayout(jPCommie);
        jPCommie.setLayout(jPCommieLayout);
        jPCommieLayout.setHorizontalGroup(
            jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCommieLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFComp2A2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jTFComp1A2)
                    .addComponent(jTFEntryA2)
                    .addComponent(jTFBirthA2)
                    .addComponent(jTFNameA2))
                .addContainerGap())
        );
        jPCommieLayout.setVerticalGroup(
            jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCommieLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFNameA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFBirthA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEntryA2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFComp1A2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCommieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTFComp2A2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTPEmployees.addTab("Empleado por comisiÃ³n", jPCommie);

        jLabel7.setText("Nombres");

        jLabel8.setText("Fecha de Nacimiento");

        jLabel9.setText("Fecha de ingreso");

        jTFBirthA3.setToolTipText("Formato: dd/mm/yyyy");

        jTFEntryA3.setToolTipText("Formato: dd/mm/yyyy");

        jLabel15.setText("Porcentaje de ComisiÃ³n");

        jLabel16.setText("Ventas Brutas");

        jLabel17.setText("Salario Base");

        javax.swing.GroupLayout jPBACLayout = new javax.swing.GroupLayout(jPBAC);
        jPBAC.setLayout(jPBACLayout);
        jPBACLayout.setHorizontalGroup(
            jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBACLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTFComp3A3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jTFComp2A3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFComp1A3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFNameA3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFBirthA3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFEntryA3, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPBACLayout.setVerticalGroup(
            jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBACLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFNameA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFBirthA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEntryA3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFComp1A3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTFComp2A3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPBACLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTFComp3A3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTPEmployees.addTab("Empleado por base y comisiÃ³n", jPBAC);

        jBExit.setText("Salir");
        jBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExitActionPerformed(evt);
            }
        });

        jBNew.setText("Nuevo");
        jBNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNewActionPerformed(evt);
            }
        });

        jBAddStart.setText("AÃ±adir-Inicio");
        jBAddStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddStartActionPerformed(evt);
            }
        });

        jTAArea.setColumns(20);
        jTAArea.setRows(5);
        jScrollPane1.setViewportView(jTAArea);

        jBLeastPayed.setText("Menos pagado");
        jBLeastPayed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLeastPayedActionPerformed(evt);
            }
        });

        jBMostPayed.setText("MÃ¡s pagado");
        jBMostPayed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMostPayedActionPerformed(evt);
            }
        });

        jBAddEnd.setText("AÃ±adir-Final");
        jBAddEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddEndActionPerformed(evt);
            }
        });

        jBAddOrder.setText("AÃ±adir-Ordenl");
        jBAddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAddOrderActionPerformed(evt);
            }
        });

        jBDelete.setText("Eliminar");
        jBDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBAddStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAddEnd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAddOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBExit, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBLeastPayed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBMostPayed)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTPEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jTPEmployees))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBMostPayed)
                        .addComponent(jBLeastPayed)
                        .addComponent(jBExit)
                        .addComponent(jBNew))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBAddStart)
                        .addComponent(jBAddEnd)
                        .addComponent(jBAddOrder)
                        .addComponent(jBDelete)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    Consumer<javax.swing.JTextField> clean = jtf ->{jtf.setText("");};//Simple pero utilazo para limpiar mis jtf sin tener que llamarlos a todos
            
    private void jTPEmployeesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTPEmployeesStateChanged
        // TODO add your handling code here:\
        focusedJFs.forEach(clean);
        switch(jTPEmployees.getSelectedIndex()){
            case 0:
                focusedJFs = new ArrayList<>(Arrays.asList(jTFNameA0,jTFBirthA0,jTFEntryA0,jTFComp1A0,jTFComp2A0));
                break;
            case 1:
                focusedJFs = new ArrayList<>(Arrays.asList(jTFNameA1,jTFBirthA1,jTFEntryA1,jTFComp2A1));
                break;
            case 2:
                focusedJFs = new ArrayList<>(Arrays.asList(jTFNameA2,jTFBirthA2,jTFEntryA2,jTFComp1A2,jTFComp2A2));
                break;
            case 3:
                focusedJFs = new ArrayList<>(Arrays.asList(jTFNameA3,jTFBirthA3,jTFEntryA3,jTFComp1A3,jTFComp2A3,jTFComp3A3));
                break;
            default:
                focusedJFs = new ArrayList();
                break;
        }
    }//GEN-LAST:event_jTPEmployeesStateChanged

    private boolean validateDateInput(String string){
        Matcher m =  Pattern.compile("[0-9]{1,2}/[0-9]{1,2}/[0-9]{1,4}").matcher(string);
        if(!m.matches())return false;
        return Date.isValidDate(string);
    }
    
    private boolean validateIntInput(String string){
        Matcher m =  Pattern.compile("\\d+").matcher(string);
        return m.matches();
    }
    private boolean validateDoubleInput(String string){
        Matcher m =  Pattern.compile("\\d+(.\\d+)?").matcher(string);
        return m.matches();
    }
    
    private void inputErrorMsg(){
        JOptionPane.showMessageDialog(null, "Error en la entrada de datos", "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    private void jBAddStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddStartActionPerformed
        // TODO add your handling code here:
        if(focusedJFs.get(1)!=null&&this.validateDateInput(focusedJFs.get(1).getText())&&validateDateInput(focusedJFs.get(2).getText())){
            switch(jTPEmployees.getSelectedIndex()){
                case 0:
                    if(validateIntInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText()))
                    {employeesCLinkedList.addStartEmployee(new TimedEmployee(
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Integer.parseInt(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 1:
                    if(validateDoubleInput(focusedJFs.get(3).getText()))
                    {employeesCLinkedList.addStartEmployee(new SalariedEmployee(
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 2:
                    if(validateDoubleInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText()))
                    {employeesCLinkedList.addStartEmployee(new ComissionEmployee(
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 3:
                        if(validateDoubleInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText())&&validateDoubleInput(focusedJFs.get(5).getText()))
                        {employeesCLinkedList.addStartEmployee(new ComissionAndBaseEmployee(
                                Double.parseDouble(focusedJFs.get(5).getText()),
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                        focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                default:
                    break;
            }
        }else inputErrorMsg();
        jTAArea.setText(employeesCLinkedList.toString());
    }//GEN-LAST:event_jBAddStartActionPerformed

    private void jBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExitActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jBExitActionPerformed

    private void jBNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNewActionPerformed
        focusedJFs.forEach(clean);
    }//GEN-LAST:event_jBNewActionPerformed

    private void jBLeastPayedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLeastPayedActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, employeesCLinkedList.getLeastPaid(),"Empleado peor pagado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jBLeastPayedActionPerformed

    private void jBMostPayedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMostPayedActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, employeesCLinkedList.getMostPaid(),"Empleado mejor pagado", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jBMostPayedActionPerformed

    private void jBAddEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddEndActionPerformed
        if(focusedJFs.get(1)!=null&&this.validateDateInput(focusedJFs.get(1).getText())&&validateDateInput(focusedJFs.get(2).getText())){
            switch(jTPEmployees.getSelectedIndex()){
                case 0:
                    if(validateIntInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText()))
                    {employeesCLinkedList.addEndEmployee(new TimedEmployee(
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Integer.parseInt(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 1:
                    if(validateDoubleInput(focusedJFs.get(3).getText()))
                    {employeesCLinkedList.addEndEmployee(new SalariedEmployee(
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 2:
                    if(validateDoubleInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText()))
                    {employeesCLinkedList.addEndEmployee(new ComissionEmployee(
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 3:
                        if(validateDoubleInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText())&&validateDoubleInput(focusedJFs.get(5).getText()))
                        {employeesCLinkedList.addEndEmployee(new ComissionAndBaseEmployee(
                                Double.parseDouble(focusedJFs.get(5).getText()),
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                        focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                default:
                    break;
            }
        }else inputErrorMsg();
        jTAArea.setText(employeesCLinkedList.toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_jBAddEndActionPerformed

    private void jBAddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAddOrderActionPerformed
        if(focusedJFs.get(1)!=null&&this.validateDateInput(focusedJFs.get(1).getText())&&validateDateInput(focusedJFs.get(2).getText())){
            switch(jTPEmployees.getSelectedIndex()){
                case 0:
                    if(validateIntInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText()))
                    {employeesCLinkedList.addOrderedByNameEmployee(new TimedEmployee(
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Integer.parseInt(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 1:
                    if(validateDoubleInput(focusedJFs.get(3).getText()))
                    {employeesCLinkedList.addOrderedByNameEmployee(new SalariedEmployee(
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 2:
                    if(validateDoubleInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText()))
                    {employeesCLinkedList.addOrderedByNameEmployee(new ComissionEmployee(
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                                focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                case 3:
                        if(validateDoubleInput(focusedJFs.get(3).getText())&&validateDoubleInput(focusedJFs.get(4).getText())&&validateDoubleInput(focusedJFs.get(5).getText()))
                        {employeesCLinkedList.addOrderedByNameEmployee(new ComissionAndBaseEmployee(
                                Double.parseDouble(focusedJFs.get(5).getText()),
                                Double.parseDouble(focusedJFs.get(4).getText()),
                                Double.parseDouble(focusedJFs.get(3).getText()), 
                                new Date(focusedJFs.get(2).getText()), 
                                new Date(focusedJFs.get(1).getText()), 
                                focusedJFs.get(0).getText()));
                        focusedJFs.forEach(clean);}
                    else inputErrorMsg();
                    break;
                default:
                    break;
            }
        }else inputErrorMsg();
        jTAArea.setText(employeesCLinkedList.toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_jBAddOrderActionPerformed

    private void jBDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleteActionPerformed
        // TODO add your handling code here:
        if(employeesCLinkedList.deleteEmployee(
                JOptionPane.showInputDialog(null, "Ingrese el nombre del empleado a eliminar", "Eliminar")
        ))
        {
            JOptionPane.showMessageDialog(null, "Elemento eliminado exitosamente","Operacion exitosa",JOptionPane.INFORMATION_MESSAGE);
            jTAArea.setText(employeesCLinkedList.toString());
        }else{
            JOptionPane.showMessageDialog(null, "Elemento no eliminado","Operacion exitosa",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFEmployeesCLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFEmployeesCLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFEmployeesCLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFEmployeesCLinkedList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFEmployeesCLinkedList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAddEnd;
    private javax.swing.JButton jBAddOrder;
    private javax.swing.JButton jBAddStart;
    private javax.swing.JButton jBDelete;
    private javax.swing.JButton jBExit;
    private javax.swing.JButton jBLeastPayed;
    private javax.swing.JButton jBMostPayed;
    private javax.swing.JButton jBNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPAsalariado;
    private javax.swing.JPanel jPBAC;
    private javax.swing.JPanel jPByHour;
    private javax.swing.JPanel jPCommie;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTAArea;
    private javax.swing.JTextField jTFBirthA0;
    private javax.swing.JTextField jTFBirthA1;
    private javax.swing.JTextField jTFBirthA2;
    private javax.swing.JTextField jTFBirthA3;
    private javax.swing.JTextField jTFComp1A0;
    private javax.swing.JTextField jTFComp1A2;
    private javax.swing.JTextField jTFComp1A3;
    private javax.swing.JTextField jTFComp2A0;
    private javax.swing.JTextField jTFComp2A1;
    private javax.swing.JTextField jTFComp2A2;
    private javax.swing.JTextField jTFComp2A3;
    private javax.swing.JTextField jTFComp3A3;
    private javax.swing.JTextField jTFEntryA0;
    private javax.swing.JTextField jTFEntryA1;
    private javax.swing.JTextField jTFEntryA2;
    private javax.swing.JTextField jTFEntryA3;
    private javax.swing.JTextField jTFNameA0;
    private javax.swing.JTextField jTFNameA1;
    private javax.swing.JTextField jTFNameA2;
    private javax.swing.JTextField jTFNameA3;
    private javax.swing.JTabbedPane jTPEmployees;
    // End of variables declaration//GEN-END:variables
    private ArrayList<javax.swing.JTextField> focusedJFs;
    private core.EmployeesCLinkedList employeesCLinkedList;
}
